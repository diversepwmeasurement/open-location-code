jobs:
  test-c:
    env:
      OLC_PATH: c
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: test
      run: bazel test --test_output=all ${OLC_PATH}:all
    - continue-on-error: true
      name: check formatting
      run: cd ${OLC_PATH} && bash clang_check.sh
  test-cpp:
    env:
      OLC_PATH: cpp
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: test
      run: bazel test --test_output=all ${OLC_PATH}:all
    - continue-on-error: true
      name: check formatting
      run: cd ${OLC_PATH} && bash clang_check.sh
  test-dart:
    env:
      OLC_PATH: dart
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: dart-lang/setup-dart@v1
    - continue-on-error: true
      name: test
      run: 'cd ${OLC_PATH}

        pub get && pub run test

        bash checks.sh

        '
  test-go:
    env:
      OLC_PATH: go
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - continue-on-error: true
      name: test
      run: 'cd ${OLC_PATH}

        diff -u <(echo -n) <(gofmt -d -s ./)

        go test -bench=. ./ -v

        '
    - continue-on-error: true
      name: test-gridserver
      run: 'cd tile_server/gridserver

        go test ./ -v

        '
  test-java:
    env:
      OLC_PATH: java
    name: test-java-${{ matrix.java }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: test
      run: bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package
    strategy:
      matrix:
        java:
        - '8'
        - '11'
        - '16'
        - '17'
  test-js:
    env:
      OLC_PATH: js
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: test
      run: 'cd ${OLC_PATH}

        bash checks.sh

        '
  test-js-closure:
    env:
      OLC_PATH: js/closure
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: test
      run: 'bazel test ${OLC_PATH}:all

        cd js && npm install && ./node_modules/.bin/eslint closure/*js

        '
  test-python:
    env:
      OLC_PATH: python
    name: test-python-${{ matrix.python }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - continue-on-error: true
      name: test
      run: bazel test --test_output=all ${OLC_PATH}:all
    - continue-on-error: true
      name: check formatting
      run: "cd ${OLC_PATH}\npip install yapf\nDIFF=`python -m yapf --diff *py`\nif\
        \ [ $? -eq 0 ]; then\n  echo -e \"Python files are correctly formatted\"\n\
        \  exit 0\nelse \n  echo -e \"Python files have formatting errors\"\n  echo\
        \ -e \"These must be corrected using format_check.sh\"\n  echo \"$DIFF\"\n\
        fi\nexit 1\n"
    strategy:
      matrix:
        python:
        - '2.7'
        - '3.6'
        - '3.7'
        - '3.8'
  test-ruby:
    env:
      OLC_PATH: ruby
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6'
    - continue-on-error: true
      name: test
      run: 'gem install rubocop

        gem install test-unit

        cd ${OLC_PATH} && ruby test/plus_codes_test.rb

        rubocop --config rubocop.yml

        '
  test-rust:
    env:
      OLC_PATH: rust
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: test
      run: 'cd ${OLC_PATH}

        cargo fmt --all -- --check

        cargo build

        cargo test -- --nocapture

        '
name: CI
on:
  repository_dispatch:
    types: trigger-ga___main.yml
